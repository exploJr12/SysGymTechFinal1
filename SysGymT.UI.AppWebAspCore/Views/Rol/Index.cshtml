@model IEnumerable<SysGymT.EntidadesDeNegocio.Rol>
@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
}
<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Roles</title>
    <link rel="stylesheet" href="~/css/machines/index.css">
</head>
<h1 class="position-absolute top-70 start-50 translate-middle text-warning">Listado de Roles</h1>
<p class="mt-5">
    <a asp-action="Create" class="btn btn-warning">
        Agregar
        <img src="~/img/machines/add-icon.png" id="invert" />
    </a>
</p>

<div class="main-container mt-5">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th colspan="3" class="action-th">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr data-page="@numPage" class="table table-responsive paginationjs">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="botonestabla">
                        <a asp-action="Edit" asp-route-Id_Rol="@item.Id_Rol" class="edit-button">
                            <img src="~/img/machines/editar.png" class="image-inside-button" />
                        </a>
                    </td>
                    <td class="botonestabla">
                        @Html.ActionLink("Ver", "Details", new { Id_Rol = item.Id_Rol }, new { @class = "btn btn-warning" })

                    </td>
                    <td class="botonestabla">
                        @Html.ActionLink("Eliminar", "Delete", new { Id_Rol = item.Id_Rol }, new { @class = "btn btn-danger" })
                    </td>
                </tr>
                numRegistros++;
                if (numRegistros == numRegistrosPorPage)
                {
                    numPage++;
                    numRegistros = 0;
                }
            }
            @{
                if (numRegistros == 0)
                {
                    numPage--;
                }
            }
        </tbody>
    </table>
</div>
@if (numPage > 1)
{
    <div class="row" style="overflow:auto">
        <div class="col-md-12">
            <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Previous</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Next</a></li>
            </ul>
        </div>
    </div>
}